type BaseError implements Error {
  message: String!
}

scalar Date

interface Error {
  message: String!
}

scalar File

type Query {
  """returns all users"""
  AllUsers: QueryAllUsersResult!

  """returns user data"""
  User(userPk: Int!): QueryUserResult!
  hello(name: String): QueryHelloResult!
}

union QueryAllUsersResult = BaseError | QueryAllUsersSuccess | ZodError

type QueryAllUsersSuccess {
  data: [User!]!
}

union QueryHelloResult = BaseError | QueryHelloSuccess | ZodError

type QueryHelloSuccess {
  data: String!
}

union QueryUserResult = BaseError | QueryUserSuccess | ZodError

type QueryUserSuccess {
  data: User!
}

"""User object type"""
type User {
  id: ID!
  name: String!
  pk: Int!
}

type ZodError implements Error {
  fieldErrors: [ZodFieldError!]!
  message: String!
}

type ZodFieldError {
  message: String!
  path: [String!]!
}
